<?php
/**
 * Created by PhpStorm.
 * modelUser: Anton
 * Date: 04.03.2020
 * Time: 20:10
 */

namespace Rate;

trait Gps {
    public function addGps()
    {
        return $this->getHours() * 15;
    }
}

trait AddDriver {
    public function addDriver()
    {
        return 100;
    }
}

interface iRate {
    public function getPrice();
}

abstract class Rate implements iRate
{
    use addDriver;
    use Gps;
    private $pricePerMinute = 0;
    private $pricePerKilometers = 0;
    private $distance;
    private $hours;
    private $driver;
    private $gps;
    private $age;

    /**
     * Rate constructor.
     * @param $driver
     * @param $gps
     * @param $age
     * @throws \Exception
     */
    public function __construct($driver, $gps, $age)
    {
        if ($age < 18 || $age > 65) {
            throw new \Exception('Вы не подходите');
        }

        $this->driver = $driver;
        $this->gps = $gps;
        $this->age = $age;
    }

    /**
     * @return int
     */
    public function getPricePerMinute()
    {
        return $this->pricePerMinute;
    }

    /**
     * @param int $pricePerMinute
     */
    public function setPricePerMinute($pricePerMinute)
    {
        $this->pricePerMinute = $pricePerMinute;
    }

    /**
     * @return int
     */
    public function getPricePerKilometers()
    {
        return $this->pricePerKilometers;
    }

    /**
     * @param int $pricePerKilometers
     */
    public function setPricePerKilometers($pricePerKilometers)
    {
        $this->pricePerKilometers = $pricePerKilometers;
    }

    /**
     * @return mixed
     */
    public function getDistance()
    {
        return $this->distance;
    }

    /**
     * @param mixed $distance
     */
    public function setDistance($distance)
    {
        $this->distance = $distance;
    }

    /**
     * @return mixed
     */
    public function getHours()
    {
        return $this->hours;
    }

    /**
     * @param mixed $hours
     */
    public function setHours($hours)
    {
        $this->hours = $hours;
    }

    public function getPrice()
    {
        $bonus = 1;

        if ($this->age > 17 && $this->age < 22) {
            $bonus = 1.1;
        }
        $price = $this->getDistance() * $this->getPricePerKilometers() + ($this->getHours()*60) * $this->getPricePerMinute() * $bonus;

        if (!empty($this->driver)) {
            $price += $this->addDriver();
        }
        if ($this->gps == 1) {
            $price += $this->addGps();
        }
        return $price;
    }
}

class RateBase extends Rate {
    protected $pricePerMinute = 3;
    protected $pricePerKilometers = 10;

    use AddDriver;

    public function getPrice()
    {
        echo 'Базовый: ';
        parent::getPrice(); // TODO: Change the autogenerated stub
    }
}

class RateHours extends Rate {
    public function getPrice()
    {
        echo 'Почасовой: ';
        $this->setPricePerKilometers(0);
        $this->setPricePerMinute(33.3);

        parent::getPrice();
        return $this->price;
    }
}

class RateDay extends Rate{
    protected $pricePerDay = 1000;
    protected $pricePerKilometers = 1;

    public function getPrice()
    {
        if ($this->getHours() > 24.5) {
            $this->setHours(24);
        }
        echo 'Посуточный: ';
        if ($this->age < 18 || $this->age > 65) {
            echo "Вы не подходите";
        } elseif ($this->age > 17 && $this->age < 22) {
            $this->price = ($this->getDistance() * $this->pricePerKilometers + ($this->getHours()/24) * $this->pricePerDay) * 1.1;
        } else {
            $this->price = $this->getDistance() * $this->pricePerKilometers + ($this->getHours()/24) * $this->pricePerDay;
        }
        if ($this->driver == 1) {
            $this->addDriver();
        }
        if ($this->gps == 1) {
            $this->addGps();
        }
        return $this->price;
    }
}

class RateStudent extends Rate{
    protected $pricePerMinute = 1;
    protected $pricePerKilometers = 4;

    public function getPrice()
    {
        if ($this->age > 25) {
            echo 'Вы не студент';
            die;
        }
        echo 'Студенческий: ';
        parent::getPrice(); // TODO: Change the autogenerated stub
    }
}